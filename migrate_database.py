#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π api_id –∏ api_hash –≤ —Ç–∞–±–ª–∏—Ü—É accounts
"""

import psycopg2
from psycopg2 import sql
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏)
DB_NAME = "tgmails"
DB_USER = "postgres"
DB_PASSWORD = "1245"
DB_HOST = "localhost"
DB_PORT = 5432

def migrate_database():
    try:
        conn = psycopg2.connect(
            dbname=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD,
            host=DB_HOST,
            port=DB_PORT
        )
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç–æ–ª–±—Ü–æ–≤
        cursor.execute("""
            SELECT column_name FROM information_schema.columns
            WHERE table_name='accounts' AND column_name IN ('api_id', 'api_hash')
        """)
        existing_columns = {row[0] for row in cursor.fetchall()}

        if 'api_id' in existing_columns and 'api_hash' in existing_columns:
            print("‚úÖ –ü–æ–ª—è api_id –∏ api_hash —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç!")
            cursor.close()
            conn.close()
            return True

        print("üîÑ –ù–∞—á–∏–Ω–∞—é –º–∏–≥—Ä–∞—Ü–∏—é...")

        if 'api_id' not in existing_columns:
            cursor.execute(sql.SQL("ALTER TABLE accounts ADD COLUMN api_id INTEGER DEFAULT 0"))
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ api_id")

        if 'api_hash' not in existing_columns:
            cursor.execute(sql.SQL("ALTER TABLE accounts ADD COLUMN api_hash TEXT DEFAULT ''"))
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ api_hash")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ null
        cursor.execute("UPDATE accounts SET api_id = 0 WHERE api_id IS NULL")
        cursor.execute("UPDATE accounts SET api_hash = '' WHERE api_hash IS NULL")

        cursor.close()
        conn.close()

        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å —Å –Ω–æ–≤—ã–º–∏ API credentials!")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    migrate_database()
